Backend to BrowserQuest (http://browserquest.mozilla.org/) in Erlang/OTP.

We make use of Cowboy websocket handlers for communication with
the BrowserQuest client. No modifications were done to the BrowserQuest Client
except for ip configuration.
The goal is to build a more scalable backend for websocket-based games.

Features:
    * Player login and movement works. Map collision detection and
      player start position generation.
    * Basic monster spawning and fighting.
    * Different architecture than the original nodeJS backend; we hope to add
      more scalability features later on. The architecture is event-based and
      players, monsters and items are mapped as Erlang processes.

Future:
    * Support item drops and static NPCs.
    * Proper supervisor tree.

Installation:
Backend:

1. git clone git@github.com:Spawnfest2012/win.git
2. ./rebar get-deps
3. ./rebar compile
4. ./init.sh
5. Start Client (see below)

Client:

1. git clone git://github.com/sedrik/BrowserQuest.git
3. Launch backend.
4. Point browser to client/index.html

The original BrowserQuest repo is at https://github.com/mozilla/BrowserQuest